{"version":3,"sources":["file:///E:/04Project/Cocos/Portal/assets/script/v2/trueDoor.ts"],"names":["_decorator","BoxCollider","Collider","v3","Quat","Door","DoorCtrl","PlayerCtrl","ccclass","trueDoor","constructor","door","enterDetector","teleportDetector","wall","getChildByPath","getComponent","on","enterDetect","leaveDetect","enabled","setWall","layer","teleportDetect","instance","Player","setWorldPosition","position","rts","getCamRts","euler","getEulerAngles","z","fromEuler","x","y","pos","mainCamera","node","setWorldRotation","playerCamera","worldRotation","playerAngel","camera","scheduleOnce"],"mappings":"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","sourcesContent":["import { _decorator, Node, BoxCollider, Collider, v3, Quat } from 'cc';\nimport { Door } from './Door';\nimport { DoorCtrl } from './DoorCtrl';\nimport { PlayerCtrl } from './PlayerCtrl';\nconst { ccclass } = _decorator;\n\n@ccclass('trueDoor')\nexport class trueDoor extends Door {\n    constructor(door:Node){\n        super(door);\n        this.enterDetector = door.getChildByPath(\"Door/enterDetect\").getComponent(BoxCollider);\n        this.teleportDetector = door.getChildByPath(\"Door/tpDetect\").getComponent(BoxCollider);\n        this.enterDetector.on(\"onTriggerEnter\",this.enterDetect,this);\n        this.enterDetector.on(\"onTriggerExit\",this.leaveDetect,this);\n    }\n    \n    //外部检测碰撞箱\n    public enterDetector:BoxCollider;\n    //内部检测碰撞箱\n    public teleportDetector:BoxCollider;\n    //吸附的节点\n    public wall:Node;\n    enterDetect(){//门前碰撞检测，检测到后关闭附着到的墙壁的碰撞箱\n        this.wall.getComponent(Collider).enabled = false;\n    }\n    leaveDetect(){//离开门，重启碰撞箱\n        this.wall.getComponent(Collider).enabled = true;\n    }\n    setWall(wall:Node){//设置墙面\n        if(this.wall){//恢复先前的墙的层级\n            this.wall.layer = 1073741824;\n        }\n        this.wall = wall;//更新墙面\n        wall.layer = 1;//设置层级，让他不被门的摄像机渲染到\n        //default:1073741824\n        //a:1\n    }\n\n    teleportDetect(door:trueDoor){//门内检测碰撞，碰撞则tp到另一个门，获取当前速度的向量长度，方向设置为另一个门摄像机的方向。速度大小相同。\n        if(!door.wall) {//只放置了一个门时不允许传送\n            this.wall.getComponent(Collider).enabled = true;\n            PlayerCtrl.instance.Player.setWorldPosition(this.position);\n            return;\n        }\n        \n        // 获取方向\n        let rts = new Quat();\n        door.getCamRts(rts);\n        let euler = v3();\n        rts.getEulerAngles(euler);\n        euler.z = 0;//防止视角倾斜，但是这样会丧失一些位置关系(其实可以做平滑移动)\n        Quat.fromEuler(rts,euler.x,euler.y+180,euler.z);\n        /* 同步速度的部分有bug，放弃实现(不会算四元数呜呜呜)\n        //获取速度向量的长度\n        let v0 = v3();\n        PlayerCtrl.instance.RigidBodyComponent.getLinearVelocity(v0);\n        //设置速度方向\n        let length = v0.length();\n        let v1 = v0.clone().normalize();\n        Vec3.transformQuat(v1,v1,rts);\n        v1.multiplyScalar(length*2);\n        */\n        // 获取另一个传送门的位置\n        let pos = v3();\n        pos = door.position;\n        // 执行传送\n        door.door.getChildByPath(\"Door/tpDetect\").getComponent(BoxCollider).enabled = false;//短暂关闭对门的碰撞箱防止无限传送\n        PlayerCtrl.instance.Player.setWorldPosition(pos);\n        // PlayerCtrl.instance.RigidBodyComponent.setLinearVelocity(v1);//有bug\n\n        DoorCtrl.instance.mainCamera.node.setWorldRotation(rts);\n        PlayerCtrl.instance.playerCamera.worldRotation.getEulerAngles(PlayerCtrl.instance.playerAngel);//更新人物角度朝向信息供移动函数使用\n\n        //二次执行抵消莫名其妙的bug(人物旋转180度，找了两天没找到问题在哪)\n        DoorCtrl.instance.mainCamera.node.setWorldRotation(this.camera.worldRotation);\n        PlayerCtrl.instance.playerCamera.worldRotation.getEulerAngles(PlayerCtrl.instance.playerAngel);\n\n\n        //重启tp检测碰撞箱\n        this.scheduleOnce(()=>{\n            door.door.getChildByPath(\"Door/tpDetect\").getComponent(BoxCollider).enabled = true;\n        },0.5)\n\n        //tp后重启墙面碰撞箱\n        this.wall.getComponent(Collider).enabled = true;\n    }\n    \n}\n\n"]}